{"version":3,"sources":["app/global-styles.js","app/app-styles.js","app/components/fade.js","app/components/spinner.js","utils/get-quote.js","app/app.js","serviceWorker.js","index.js"],"names":["GlobalStyle","createGlobalStyle","styled","div","FadeContainer","props","show","Fade","children","useState","shouldRender","setRender","useEffect","onAnimationEnd","SpinnerContainer","Spinner","className","a","fetch","response","json","quote","quoteText","quoteAuthor","console","log","App","setShow","quoteData","setQuoteData","updateQuote","getQuote","id","length","onClick","style","color","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"gyEAEA,IAsBeA,EAtBKC,YAAH,K,k0CCAFC,UAAOC,IAAtB,K,4SCCA,IAAMC,EAAgBF,IAAOC,IAAV,KAkBJ,SAACE,GAAD,OAAYA,EAAMC,KAAO,SAAW,aAsBpCC,EApBF,SAAC,GAAwB,IAAtBD,EAAqB,EAArBA,KAAME,EAAe,EAAfA,SAAe,EACDC,mBAASH,GADR,mBAC5BI,EAD4B,KACdC,EADc,KAGnCC,qBAAU,WACJN,GAAMK,GAAU,KACnB,CAACL,IAMJ,OACEI,GACE,kBAACN,EAAD,CAAeE,KAAMA,EAAMO,eANR,WAChBP,GAAMK,GAAU,KAMhBH,I,0+BClCT,IAAMM,EAAmBZ,IAAOC,IAAV,KAoDP,SAASY,IACtB,OACE,kBAACD,EAAD,KACE,yBAAKE,UAAU,WACb,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,qBC5DvB,4BAAe,oCAAAC,EAAA,4DACE,0DADF,kBAIYC,MAHV,2DADF,cAILC,EAJK,gBAODA,EAASC,OAPR,2BAMTC,MAASC,EANA,EAMAA,UAAWC,EANX,EAMWA,YANX,kBAQJ,CAAED,YAAWC,gBART,yCAWXC,QAAQC,IAAI,qBAAZ,MAXW,kBAYJ,CAAEH,UAAW,uBAAwBC,YAAa,eAZ9C,0DC6DAG,MAtDf,WAAgB,IAAD,IACWjB,oBAAS,GADpB,mBACNH,EADM,KACAqB,EADA,OAEqBlB,mBAAS,CACzCa,UAAW,KACXC,YAAa,OAJF,mBAENK,EAFM,KAEKC,EAFL,KAMPC,EAAW,uCAAG,gCAAAb,EAAA,6DAClBU,GAAQ,GADU,SAEuBI,IAFvB,gBAEVT,EAFU,EAEVA,UAAWC,EAFD,EAECA,YACnBM,EAAa,CAAEP,YAAWC,gBAC1BI,GAAQ,GAJU,2CAAH,qDASjB,OAHAf,qBAAU,WACRkB,MACC,IAED,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAMxB,MAAOA,GACX,kBAACS,EAAD,OAEF,kBAAC,EAAD,CAAMT,KAAMA,GACV,yBAAKU,UAAU,kBAAkBgB,GAAG,mBAClC,yBACEhB,UAAS,uBACG,OAATY,QAAS,IAATA,GAAA,UAAAA,EAAWN,iBAAX,eAAsBW,SAAU,GAAK,IAAM,aAE9CD,GAAG,cAEH,uBAAGhB,UAAU,sBACb,0BAAMgB,GAAG,SAASJ,EAAUN,YAE9B,yBAAKN,UAAU,gBACb,0BAAMgB,GAAG,UACP,uBAAGhB,UAAU,cACb,8BAAOY,EAAUL,eAGrB,yBAAKP,UAAU,oBACb,4BAAQkB,QAASJ,EAAad,UAAU,aACtC,uBAAGA,UAAU,gBACb,8CAIN,yBAAKgB,GAAG,UAAR,aACY,0BAAMG,MAAO,CAAEC,MAAO,YAAtB,UADZ,4BCxCYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL9B,QAAQ8B,MAAMA,EAAMC,c","file":"static/js/main.858c7018.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n      padding: 0;\n      margin: 0;\n      box-sizing: border-box;\n      outline: none;\n      font-family: 'Lobster', cursive;    \n  }\n  html{\n    font-size: 20px;\n  }\n  body {\n    min-height: 100vh;\n    background-color: #ffffff;\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 56 28' width='56' height='28'%3E%3Cpath fill='%23000000' fill-opacity='0.13' d='M56 26v2h-7.75c2.3-1.27 4.94-2 7.75-2zm-26 2a2 2 0 1 0-4 0h-4.09A25.98 25.98 0 0 0 0 16v-2c.67 0 1.34.02 2 .07V14a2 2 0 0 0-2-2v-2a4 4 0 0 1 3.98 3.6 28.09 28.09 0 0 1 2.8-3.86A8 8 0 0 0 0 6V4a9.99 9.99 0 0 1 8.17 4.23c.94-.95 1.96-1.83 3.03-2.63A13.98 13.98 0 0 0 0 0h7.75c2 1.1 3.73 2.63 5.1 4.45 1.12-.72 2.3-1.37 3.53-1.93A20.1 20.1 0 0 0 14.28 0h2.7c.45.56.88 1.14 1.29 1.74 1.3-.48 2.63-.87 4-1.15-.11-.2-.23-.4-.36-.59H26v.07a28.4 28.4 0 0 1 4 0V0h4.09l-.37.59c1.38.28 2.72.67 4.01 1.15.4-.6.84-1.18 1.3-1.74h2.69a20.1 20.1 0 0 0-2.1 2.52c1.23.56 2.41 1.2 3.54 1.93A16.08 16.08 0 0 1 48.25 0H56c-4.58 0-8.65 2.2-11.2 5.6 1.07.8 2.09 1.68 3.03 2.63A9.99 9.99 0 0 1 56 4v2a8 8 0 0 0-6.77 3.74c1.03 1.2 1.97 2.5 2.79 3.86A4 4 0 0 1 56 10v2a2 2 0 0 0-2 2.07 28.4 28.4 0 0 1 2-.07v2c-9.2 0-17.3 4.78-21.91 12H30zM7.75 28H0v-2c2.81 0 5.46.73 7.75 2zM56 20v2c-5.6 0-10.65 2.3-14.28 6h-2.7c4.04-4.89 10.15-8 16.98-8zm-39.03 8h-2.69C10.65 24.3 5.6 22 0 22v-2c6.83 0 12.94 3.11 16.97 8zm15.01-.4a28.09 28.09 0 0 1 2.8-3.86 8 8 0 0 0-13.55 0c1.03 1.2 1.97 2.5 2.79 3.86a4 4 0 0 1 7.96 0zm14.29-11.86c1.3-.48 2.63-.87 4-1.15a25.99 25.99 0 0 0-44.55 0c1.38.28 2.72.67 4.01 1.15a21.98 21.98 0 0 1 36.54 0zm-5.43 2.71c1.13-.72 2.3-1.37 3.54-1.93a19.98 19.98 0 0 0-32.76 0c1.23.56 2.41 1.2 3.54 1.93a15.98 15.98 0 0 1 25.68 0zm-4.67 3.78c.94-.95 1.96-1.83 3.03-2.63a13.98 13.98 0 0 0-22.4 0c1.07.8 2.09 1.68 3.03 2.63a9.99 9.99 0 0 1 16.34 0z'%3E%3C/path%3E%3C/svg%3E\");\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n  }\n`;\n\nexport default GlobalStyle;\n","import styled from \"styled-components\";\n\nexport default styled.div`\n  .quote-container {\n    width: auto;\n    max-width: 90vw;\n    padding: 2vh 3vh;\n    border-radius: 10px;\n    background-color: rgba(255, 255, 255, 0.4);\n    box-shadow: 0 10px 10px 10px rgba(0, 0, 0, 0.2);\n    .quote-text {\n      font-size: 6vh;\n    }\n    .long-text {\n      font-size: 5vh;\n    }\n    .la-quote-left {\n      font-size: 8vh;\n    }\n    .la-at {\n      font-size: 2.5vh;\n    }\n    .quote-author {\n      display: flex;\n      align-items: center;\n      justify-content: flex-end;\n      margin-top: 1vh;\n      font-size: 3.5vh;\n      font-weight: 400;\n      font-style: italic;\n    }\n    .button-container {\n      display: flex;\n      margin-top: 3vh;\n      justify-content: flex-start;\n      button {\n        cursor: pointer;\n        font-size: 2vh;\n        padding: 1vh 1vh;\n        border-radius: 10px;\n        color: #fff;\n        background: #333;\n        box-shadow: 0 0.3vh rgba(121, 121, 121, 0.65);\n        * + * {\n          margin-left: 1vh;\n        }\n        &:hover {\n          filter: brightness(150%);\n        }\n        &:active {\n          transform: translate(0, 0.5vh);\n          box-shadow: 0 0.5vh rgba(255, 255, 255, 0.65);\n        }\n      }\n    }\n  }\n  #footer {\n    margin-top: 2vh;\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst FadeContainer = styled.div`\n  @keyframes fadeIn {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n\n  @keyframes fadeOut {\n    0% {\n      opacity: 1;\n    }\n    100% {\n      opacity: 0;\n    }\n  }\n  animation: ${(props) => (props.show ? \"fadeIn\" : \"fadeOut\")} 1s;\n`;\nconst Fade = ({ show, children }) => {\n  const [shouldRender, setRender] = useState(show);\n\n  useEffect(() => {\n    if (show) setRender(true);\n  }, [show]);\n\n  const onAnimationEnd = () => {\n    if (!show) setRender(false);\n  };\n\n  return (\n    shouldRender && (\n      <FadeContainer show={show} onAnimationEnd={onAnimationEnd}>\n        {children}\n      </FadeContainer>\n    )\n  );\n};\n\nexport default Fade;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst SpinnerContainer = styled.div`\n  position: fixed;\n  top: 35vh;\n  left: 45vw;\n  .spinner {\n    width: 40px;\n    height: 40px;\n    position: relative;\n    margin: 100px auto;\n  }\n  .double-bounce1,\n  .double-bounce2 {\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n    background-color: #333;\n    opacity: 0.6;\n    position: absolute;\n    top: 0;\n    left: 0;\n\n    -webkit-animation: sk-bounce 2s infinite ease-in-out;\n    animation: sk-bounce 2s infinite ease-in-out;\n  }\n\n  .double-bounce2 {\n    -webkit-animation-delay: -1s;\n    animation-delay: -1s;\n  }\n\n  @-webkit-keyframes sk-bounce {\n    0%,\n    100% {\n      -webkit-transform: scale(0);\n    }\n    50% {\n      -webkit-transform: scale(1);\n    }\n  }\n\n  @keyframes sk-bounce {\n    0%,\n    100% {\n      transform: scale(0);\n      -webkit-transform: scale(0);\n    }\n    50% {\n      transform: scale(1);\n      -webkit-transform: scale(1);\n    }\n  }\n`;\nexport default function Spinner() {\n  return (\n    <SpinnerContainer>\n      <div className=\"spinner\">\n        <div className=\"double-bounce1\"></div>\n        <div className=\"double-bounce2\"></div>\n      </div>\n    </SpinnerContainer>\n  );\n}\n","export default async () => {\n  const apiUrl = \"https://quote-garden.herokuapp.com/api/v2/quotes/random\";\n  //parse out quote from return of api and return\n  try {\n    const response = await fetch(apiUrl);\n    const {\n      quote: { quoteText, quoteAuthor },\n    } = await response.json();\n    return { quoteText, quoteAuthor };\n    // return snarky quote on failure\n  } catch (error) {\n    console.log(\"no quote available\", error);\n    return { quoteText: \"Nothing to see here.\", quoteAuthor: \"the Server\" };\n  }\n};\n","import React, { useEffect, useState } from \"react\";\nimport GlobalStyle from \"./global-styles\";\nimport AppContainer from \"./app-styles\";\nimport Fade from \"./components/fade\";\nimport Spinner from \"./components/spinner\";\nimport getQuote from \"../utils/get-quote\";\n\nfunction App() {\n  const [show, setShow] = useState(false);\n  const [quoteData, setQuoteData] = useState({\n    quoteText: null,\n    quoteAuthor: null,\n  });\n  const updateQuote = async () => {\n    setShow(false);\n    const { quoteText, quoteAuthor } = await getQuote();\n    setQuoteData({ quoteText, quoteAuthor });\n    setShow(true);\n  };\n  useEffect(() => {\n    updateQuote();\n  }, []);\n  return (\n    <AppContainer>\n      <GlobalStyle />\n      <Fade show={!show}>\n        <Spinner />\n      </Fade>\n      <Fade show={show}>\n        <div className=\"quote-container\" id=\"quote-container\">\n          <div\n            className={`quote-text ${\n              (quoteData?.quoteText?.length || 0) > 50 && \"long-text\"\n            }`}\n            id=\"quote-text\"\n          >\n            <i className=\"las la-quote-left\"></i>\n            <span id=\"quote\">{quoteData.quoteText}</span>\n          </div>\n          <div className=\"quote-author\">\n            <span id=\"author\">\n              <i className=\"las la-at\"></i>\n              <span>{quoteData.quoteAuthor}</span>\n            </span>\n          </div>\n          <div className=\"button-container\">\n            <button onClick={updateQuote} className=\"new-quote\">\n              <i className=\"las la-sync\"></i>\n              <span>New Quote</span>\n            </button>\n          </div>\n        </div>\n        <div id=\"footer\">\n          Made with <span style={{ color: \"#e25555\" }}>&hearts;</span> by\n          Michael Rowlinson\n        </div>\n      </Fade>\n    </AppContainer>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app/app\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}